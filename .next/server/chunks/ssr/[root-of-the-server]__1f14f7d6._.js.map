{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/USER/Desktop/teachLink_web/app/contexts/AuthContext.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { createContext, useContext, useEffect, useState } from 'react';\r\nimport { useSession, signIn, signOut } from 'next-auth/react';\r\nimport { useRouter } from 'next/navigation';\r\n\r\ninterface User {\r\n  id: string;\r\n  email: string;\r\n  name?: string;\r\n  role?: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  isAuthenticated: boolean;\r\n  isLoading: boolean;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  logout: () => Promise<void>;\r\n  signup: (email: string, password: string) => Promise<void>;\r\n  resetPassword: (email: string) => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\r\n  const { data: session, status } = useSession();\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    if (session?.user) {\r\n      setUser({\r\n        id: session.user.id as string,\r\n        email: session.user.email as string,\r\n        name: session.user.name as string,\r\n        role: session.user.role as string,\r\n      });\r\n    } else {\r\n      setUser(null);\r\n    }\r\n  }, [session]);\r\n\r\n  const login = async (email: string, password: string) => {\r\n    try {\r\n      const result = await signIn('credentials', {\r\n        email,\r\n        password,\r\n        redirect: false,\r\n      });\r\n\r\n      if (result?.error) {\r\n        throw new Error(result.error);\r\n      }\r\n\r\n      router.push('/dashboard');\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await signOut({ redirect: false });\r\n      router.push('/auth/login');\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const signup = async (email: string, password: string) => {\r\n    try {\r\n      const response = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/auth/signup`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const error = await response.json();\r\n        throw new Error(error.message);\r\n      }\r\n\r\n      // After successful signup, log the user in\r\n      await login(email, password);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const resetPassword = async (email: string) => {\r\n    try {\r\n      const response = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/auth/reset-password`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const error = await response.json();\r\n        throw new Error(error.message);\r\n      }\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    isAuthenticated: !!user,\r\n    isLoading: status === 'loading',\r\n    login,\r\n    logout,\r\n    signup,\r\n    resetPassword,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n}\r\n\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAJA;;;;;AAuBA,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,SAAS,aAAa,EAAE,QAAQ,EAAiC;IACtE,MAAM,EAAE,MAAM,OAAO,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,8IAAA,CAAA,aAAU,AAAD;IAC3C,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,SAAS,MAAM;YACjB,QAAQ;gBACN,IAAI,QAAQ,IAAI,CAAC,EAAE;gBACnB,OAAO,QAAQ,IAAI,CAAC,KAAK;gBACzB,MAAM,QAAQ,IAAI,CAAC,IAAI;gBACvB,MAAM,QAAQ,IAAI,CAAC,IAAI;YACzB;QACF,OAAO;YACL,QAAQ;QACV;IACF,GAAG;QAAC;KAAQ;IAEZ,MAAM,QAAQ,OAAO,OAAe;QAClC,IAAI;YACF,MAAM,SAAS,MAAM,CAAA,GAAA,8IAAA,CAAA,SAAM,AAAD,EAAE,eAAe;gBACzC;gBACA;gBACA,UAAU;YACZ;YAEA,IAAI,QAAQ,OAAO;gBACjB,MAAM,IAAI,MAAM,OAAO,KAAK;YAC9B;YAEA,OAAO,IAAI,CAAC;QACd,EAAE,OAAO,OAAO;YACd,MAAM;QACR;IACF;IAEA,MAAM,SAAS;QACb,IAAI;YACF,MAAM,CAAA,GAAA,8IAAA,CAAA,UAAO,AAAD,EAAE;gBAAE,UAAU;YAAM;YAChC,OAAO,IAAI,CAAC;QACd,EAAE,OAAO,OAAO;YACd,MAAM;QACR;IACF;IAEA,MAAM,SAAS,OAAO,OAAe;QACnC,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,GAAG,CAAC,mBAAmB,CAAC,YAAY,CAAC,EAAE;gBAC7E,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;oBAAE;oBAAO;gBAAS;YACzC;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,QAAQ,MAAM,SAAS,IAAI;gBACjC,MAAM,IAAI,MAAM,MAAM,OAAO;YAC/B;YAEA,2CAA2C;YAC3C,MAAM,MAAM,OAAO;QACrB,EAAE,OAAO,OAAO;YACd,MAAM;QACR;IACF;IAEA,MAAM,gBAAgB,OAAO;QAC3B,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,GAAG,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,EAAE;gBACrF,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;oBAAE;gBAAM;YAC/B;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,QAAQ,MAAM,SAAS,IAAI;gBACjC,MAAM,IAAI,MAAM,MAAM,OAAO;YAC/B;QACF,EAAE,OAAO,OAAO;YACd,MAAM;QACR;IACF;IAEA,MAAM,QAAQ;QACZ;QACA,iBAAiB,CAAC,CAAC;QACnB,WAAW,WAAW;QACtB;QACA;QACA;QACA;IACF;IAEA,qBAAO,8OAAC,YAAY,QAAQ;QAAC,OAAO;kBAAQ;;;;;;AAC9C;AAEO,SAAS;IACd,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}}]
}